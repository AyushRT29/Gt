@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";

/* GTA SAN ANDREAS THEME - DARK MODE DEFAULT */
:root {
  --button-outline: rgba(57, 255, 20, .20);
  --badge-outline: rgba(57, 255, 20, .10);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: 9; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(57, 255, 20, .05);
  --elevate-2: rgba(57, 255, 20, .12);

  --background: 0 0% 0%;

  --foreground: 0 0% 95%;

  --border: 0 0% 15%;

  --card: 0 0% 10%;

  --card-foreground: 0 0% 90%;

  --card-border: 24 100% 50%;

  --sidebar: 0 0% 8%;

  --sidebar-foreground: 0 0% 90%;

  --sidebar-border: 0 0% 15%;

  --sidebar-primary: 120 100% 50%;

  --sidebar-primary-foreground: 0 0% 0%;

  --sidebar-accent: 0 0% 15%;

  --sidebar-accent-foreground: 0 0% 90%;

  --sidebar-ring: 120 100% 50%;

  --popover: 0 0% 10%;

  --popover-foreground: 0 0% 90%;

  --popover-border: 120 100% 50%;

  --primary: 120 100% 50%;

  --primary-foreground: 0 0% 0%;

  --secondary: 24 100% 50%;

  --secondary-foreground: 0 0% 0%;

  --muted: 0 0% 15%;

  --muted-foreground: 0 0% 60%;

  --accent: 348 100% 50%;

  --accent-foreground: 0 0% 100%;

  --destructive: 348 100% 50%;

  --destructive-foreground: 0 0% 100%;

  --input: 0 0% 20%;
  --ring: 120 100% 50%;
  --chart-1: 120 100% 50%;
  --chart-2: 24 100% 50%;
  --chart-3: 348 100% 50%;
  --chart-4: 280 80% 60%;
  --chart-5: 200 85% 55%;

  --font-sans: 'Roboto', 'Inter', sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: 'Courier New', monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);
  --shadow-xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);
  --shadow-sm: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 1px 2px -1px hsl(0 0% 0% / 0.00);
  --shadow: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 1px 2px -1px hsl(0 0% 0% / 0.00);
  --shadow-md: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 2px 4px -1px hsl(0 0% 0% / 0.00);
  --shadow-lg: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 4px 6px -1px hsl(0 0% 0% / 0.00);
  --shadow-xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 8px 10px -1px hsl(0 0% 0% / 0.00);
  --shadow-2xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(57, 255, 20, .20);
  --badge-outline: rgba(57, 255, 20, .10);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(57, 255, 20, .05);
  --elevate-2: rgba(57, 255, 20, .12);

  --background: 0 0% 0%;

  --foreground: 0 0% 95%;

  --border: 0 0% 15%;

  --card: 0 0% 10%;

  --card-foreground: 0 0% 90%;

  --card-border: 24 100% 50%;

  --sidebar: 0 0% 8%;

  --sidebar-foreground: 0 0% 90%;

  --sidebar-border: 0 0% 15%;

  --sidebar-primary: 120 100% 50%;

  --sidebar-primary-foreground: 0 0% 0%;

  --sidebar-accent: 0 0% 15%;

  --sidebar-accent-foreground: 0 0% 90%;

  --sidebar-ring: 120 100% 50%;

  --popover: 0 0% 10%;

  --popover-foreground: 0 0% 90%;

  --popover-border: 120 100% 50%;

  --primary: 120 100% 50%;

  --primary-foreground: 0 0% 0%;

  --secondary: 24 100% 50%;

  --secondary-foreground: 0 0% 0%;

  --muted: 0 0% 15%;

  --muted-foreground: 0 0% 60%;

  --accent: 348 100% 50%;

  --accent-foreground: 0 0% 100%;

  --destructive: 348 100% 50%;

  --destructive-foreground: 0 0% 100%;

  --input: 0 0% 20%;
  --ring: 120 100% 50%;
  --chart-1: 120 100% 50%;
  --chart-2: 24 100% 50%;
  --chart-3: 348 100% 50%;
  --chart-4: 280 80% 60%;
  --chart-5: 200 85% 55%;

  --shadow-2xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);
  --shadow-xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);
  --shadow-sm: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 1px 2px -1px hsl(0 0% 0% / 0.00);
  --shadow: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 1px 2px -1px hsl(0 0% 0% / 0.00);
  --shadow-md: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 2px 4px -1px hsl(0 0% 0% / 0.00);
  --shadow-lg: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 4px 6px -1px hsl(0 0% 0% / 0.00);
  --shadow-xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 8px 10px -1px hsl(0 0% 0% / 0.00);
  --shadow-2xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

@layer base {
  * {
    border-color: hsl(var(--border));
  }

  body {
    /* Replace Tailwind @apply utilities with equivalent plain CSS */
    font-family: var(--font-sans);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="white" stroke="black" stroke-width="1"><path d="M3 3l7.07 16.97 2.51-7.39 7.39-2.51L3 3z"/></svg>'), auto;
  }
}

@layer utilities {
  .gta-title {
    font-family: 'Pricedown', 'Bebas Neue', 'Bungee', 'Black Ops One', 'Impact', sans-serif;
    font-weight: 400;
    text-transform: uppercase;
    letter-spacing: -0.02em;
    text-shadow: 
      4px 4px 0px rgba(0, 0, 0, 1),
      5px 5px 0px rgba(0, 0, 0, 0.8),
      0 0 10px rgba(57, 255, 20, 0.6);
  }

  .gta-subtitle {
    font-family: 'Old English Text MT', 'UnifrakturMaguntia', serif;
    font-weight: 700;
    letter-spacing: 0.02em;
    font-style: italic;
    text-shadow: 
      3px 3px 0px rgba(0, 0, 0, 1),
      4px 4px 0px rgba(0, 0, 0, 0.8),
      0 0 10px rgba(255, 107, 0, 0.6);
  }

  .neon-green {
    color: #39FF14;
    text-shadow: 0 0 10px rgba(57, 255, 20, 0.8);
  }

  .neon-orange {
    color: #FF6B00;
    text-shadow: 0 0 10px rgba(255, 107, 0, 0.8);
  }

  .neon-red {
    color: #FF0055;
    text-shadow: 0 0 10px rgba(255, 0, 85, 0.8);
  }

  .neon-glow-green {
    box-shadow: 
      0 0 5px rgba(57, 255, 20, 0.5),
      0 0 10px rgba(57, 255, 20, 0.3),
      0 0 15px rgba(57, 255, 20, 0.2);
  }

  .neon-glow-orange {
    box-shadow: 
      0 0 5px rgba(255, 107, 0, 0.5),
      0 0 10px rgba(255, 107, 0, 0.3),
      0 0 15px rgba(255, 107, 0, 0.2);
  }

  .neon-glow-red {
    box-shadow: 
      0 0 5px rgba(255, 0, 85, 0.5),
      0 0 10px rgba(255, 0, 85, 0.3),
      0 0 15px rgba(255, 0, 85, 0.2);
  }

  @keyframes neonFlicker {
    0%, 19%, 21%, 23%, 25%, 54%, 56%, 100% {
      text-shadow: 
        0 0 10px rgba(57, 255, 20, 0.8),
        0 0 20px rgba(57, 255, 20, 0.6),
        0 0 30px rgba(57, 255, 20, 0.4),
        3px 3px 0px rgba(0, 0, 0, 0.9);
    }
    20%, 24%, 55% {
      text-shadow: none;
    }
  }

  .neon-flicker {
    animation: neonFlicker 3s infinite;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    display: none;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate { --no-default-hover-elevate: 1; }

  .no-default-active-elevate { --no-default-active-elevate: 1; }


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    border-radius: inherit;
    z-index: -1;
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    border-radius: inherit;
    z-index: 999;
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }
}